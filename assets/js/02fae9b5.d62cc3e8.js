"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[331],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>f});var r=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=r.createContext({}),c=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},p=function(e){var t=c(e.components);return r.createElement(s.Provider,{value:t},e.children)},m="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},g=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,s=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),m=c(n),g=a,f=m["".concat(s,".").concat(g)]||m[g]||u[g]||i;return n?r.createElement(f,l(l({ref:t},p),{},{components:n})):r.createElement(f,l({ref:t},p))}));function f(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,l=new Array(i);l[0]=g;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o[m]="string"==typeof e?e:a,l[1]=o;for(var c=2;c<i;c++)l[c]=n[c];return r.createElement.apply(null,l)}return r.createElement.apply(null,n)}g.displayName="MDXCreateElement"},76647:(e,t,n)=>{n.r(t),n.d(t,{contentTitle:()=>l,default:()=>m,frontMatter:()=>i,metadata:()=>o,toc:()=>s});var r=n(87462),a=(n(67294),n(3905));const i={},l=void 0,o={type:"mdx",permalink:"/signal/",source:"@site/pages/index.md",description:"[license-shield]//img.shields.io/github/license/riverman56/signal",frontMatter:{}},s=[{value:"Example",id:"example",level:2},{value:"Installation",id:"installation",level:2}],c={toc:s},p="wrapper";function m(e){let{components:t,...n}=e;return(0,a.kt)(p,(0,r.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"signal"},"Signal"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://github.com/riverman56/signal/blob/master/LICENSE.txt"},(0,a.kt)("img",{parentName:"a",src:"https://img.shields.io/github/license/riverman56/signal",alt:"License"})),"\n",(0,a.kt)("a",{parentName:"p",href:"https://github.com/riverman56/signal/releases/latest"},(0,a.kt)("img",{parentName:"a",src:"https://img.shields.io/github/v/release/riverman56/signal?sort=semver",alt:"Release"})),"\n",(0,a.kt)("a",{parentName:"p",href:"https://github.com/riverman56/signal/actions/workflows/ci.yml"},(0,a.kt)("img",{parentName:"a",src:"https://img.shields.io/github/actions/workflow/status/riverman56/signal/ci.yml?label=CI",alt:"CI"})),"\n",(0,a.kt)("a",{parentName:"p",href:"https://github.com/riverman56/signal/actions/workflows/release.yml"},(0,a.kt)("img",{parentName:"a",src:"https://img.shields.io/github/actions/workflow/status/riverman56/signal/release.yml?label=CD",alt:"CI"}))),(0,a.kt)("p",null,"A bare-bones signal implementation with publish/subscribe functionality.\nThis library was inspired by the ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/Roblox/roact/blob/beb0bc2706b307b04204abdcf129385fd3cb3e6f/src/createSignal.lua"},"signal implementation found in Roact.")),(0,a.kt)("h2",{id:"example"},"Example"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua"},'local Signal = require(path.to.Signal)\n\nlocal signal = Signal.new()\nsignal:subscribe(function(message: string)\n    print(message)\nend)\n\nsignal:fire("Hello World!")\n-- output: Hello World!\n')),(0,a.kt)("p",null,"See the ",(0,a.kt)("a",{parentName:"p",href:"https://riverman56.github.io/signal/api/Signal"},"Signal API")," for more info"),(0,a.kt)("h2",{id:"installation"},"Installation"),(0,a.kt)("p",null,"Install the Signal package through Wally."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-toml"},'Signal = "riverman56/signal@<version>"\n')))}m.isMDXComponent=!0}}]);